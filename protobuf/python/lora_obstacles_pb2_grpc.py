# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import lora_obstacles_pb2 as lora__obstacles__pb2


class TagsServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetTags = channel.unary_unary(
        '/vutura.obstacles.TagsService/GetTags',
        request_serializer=lora__obstacles__pb2.Empty.SerializeToString,
        response_deserializer=lora__obstacles__pb2.TagsResponse.FromString,
        )
    self.SetTag = channel.unary_unary(
        '/vutura.obstacles.TagsService/SetTag',
        request_serializer=lora__obstacles__pb2.Obstacle.SerializeToString,
        response_deserializer=lora__obstacles__pb2.Empty.FromString,
        )
    self.GetWarnings = channel.unary_unary(
        '/vutura.obstacles.TagsService/GetWarnings',
        request_serializer=lora__obstacles__pb2.Empty.SerializeToString,
        response_deserializer=lora__obstacles__pb2.CollisionWarnings.FromString,
        )
    self.SetWarning = channel.unary_unary(
        '/vutura.obstacles.TagsService/SetWarning',
        request_serializer=lora__obstacles__pb2.CollisionWarning.SerializeToString,
        response_deserializer=lora__obstacles__pb2.Empty.FromString,
        )


class TagsServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetTags(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetTag(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetWarnings(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetWarning(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TagsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetTags': grpc.unary_unary_rpc_method_handler(
          servicer.GetTags,
          request_deserializer=lora__obstacles__pb2.Empty.FromString,
          response_serializer=lora__obstacles__pb2.TagsResponse.SerializeToString,
      ),
      'SetTag': grpc.unary_unary_rpc_method_handler(
          servicer.SetTag,
          request_deserializer=lora__obstacles__pb2.Obstacle.FromString,
          response_serializer=lora__obstacles__pb2.Empty.SerializeToString,
      ),
      'GetWarnings': grpc.unary_unary_rpc_method_handler(
          servicer.GetWarnings,
          request_deserializer=lora__obstacles__pb2.Empty.FromString,
          response_serializer=lora__obstacles__pb2.CollisionWarnings.SerializeToString,
      ),
      'SetWarning': grpc.unary_unary_rpc_method_handler(
          servicer.SetWarning,
          request_deserializer=lora__obstacles__pb2.CollisionWarning.FromString,
          response_serializer=lora__obstacles__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'vutura.obstacles.TagsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
