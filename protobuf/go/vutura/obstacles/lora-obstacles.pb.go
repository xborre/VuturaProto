// Code generated by protoc-gen-go. DO NOT EDIT.
// source: obstacles/lora-obstacles.proto

package obstacles

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Obstacle_Type int32

const (
	Obstacle_UNIDENTIFIED_OBJECT Obstacle_Type = 0
	Obstacle_FIRE_FIGHTER        Obstacle_Type = 1
	Obstacle_FIRE_TRUCK          Obstacle_Type = 2
	Obstacle_FIRE_UAV            Obstacle_Type = 3
	Obstacle_UNIDENTIFIED_UAV    Obstacle_Type = 4
)

var Obstacle_Type_name = map[int32]string{
	0: "UNIDENTIFIED_OBJECT",
	1: "FIRE_FIGHTER",
	2: "FIRE_TRUCK",
	3: "FIRE_UAV",
	4: "UNIDENTIFIED_UAV",
}

var Obstacle_Type_value = map[string]int32{
	"UNIDENTIFIED_OBJECT": 0,
	"FIRE_FIGHTER":        1,
	"FIRE_TRUCK":          2,
	"FIRE_UAV":            3,
	"UNIDENTIFIED_UAV":    4,
}

func (x Obstacle_Type) String() string {
	return proto.EnumName(Obstacle_Type_name, int32(x))
}

func (Obstacle_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{2, 0}
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type TagsResponse struct {
	Obstacles            []*Obstacle `protobuf:"bytes,1,rep,name=obstacles,proto3" json:"obstacles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TagsResponse) Reset()         { *m = TagsResponse{} }
func (m *TagsResponse) String() string { return proto.CompactTextString(m) }
func (*TagsResponse) ProtoMessage()    {}
func (*TagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{1}
}

func (m *TagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagsResponse.Unmarshal(m, b)
}
func (m *TagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagsResponse.Marshal(b, m, deterministic)
}
func (m *TagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagsResponse.Merge(m, src)
}
func (m *TagsResponse) XXX_Size() int {
	return xxx_messageInfo_TagsResponse.Size(m)
}
func (m *TagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TagsResponse proto.InternalMessageInfo

func (m *TagsResponse) GetObstacles() []*Obstacle {
	if m != nil {
		return m.Obstacles
	}
	return nil
}

type Obstacle struct {
	ID                   uint32             `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 Obstacle_Type      `protobuf:"varint,2,opt,name=type,proto3,enum=vutura.obstacles.Obstacle_Type" json:"type,omitempty"`
	Position             *Obstacle_Position `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	Fence                *Obstacle_Fence    `protobuf:"bytes,4,opt,name=fence,proto3" json:"fence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Obstacle) Reset()         { *m = Obstacle{} }
func (m *Obstacle) String() string { return proto.CompactTextString(m) }
func (*Obstacle) ProtoMessage()    {}
func (*Obstacle) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{2}
}

func (m *Obstacle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Obstacle.Unmarshal(m, b)
}
func (m *Obstacle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Obstacle.Marshal(b, m, deterministic)
}
func (m *Obstacle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Obstacle.Merge(m, src)
}
func (m *Obstacle) XXX_Size() int {
	return xxx_messageInfo_Obstacle.Size(m)
}
func (m *Obstacle) XXX_DiscardUnknown() {
	xxx_messageInfo_Obstacle.DiscardUnknown(m)
}

var xxx_messageInfo_Obstacle proto.InternalMessageInfo

func (m *Obstacle) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Obstacle) GetType() Obstacle_Type {
	if m != nil {
		return m.Type
	}
	return Obstacle_UNIDENTIFIED_OBJECT
}

func (m *Obstacle) GetPosition() *Obstacle_Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *Obstacle) GetFence() *Obstacle_Fence {
	if m != nil {
		return m.Fence
	}
	return nil
}

type Obstacle_Position struct {
	Latitude             float32  `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude             float32  `protobuf:"fixed32,3,opt,name=altitude,proto3" json:"altitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Obstacle_Position) Reset()         { *m = Obstacle_Position{} }
func (m *Obstacle_Position) String() string { return proto.CompactTextString(m) }
func (*Obstacle_Position) ProtoMessage()    {}
func (*Obstacle_Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{2, 0}
}

func (m *Obstacle_Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Obstacle_Position.Unmarshal(m, b)
}
func (m *Obstacle_Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Obstacle_Position.Marshal(b, m, deterministic)
}
func (m *Obstacle_Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Obstacle_Position.Merge(m, src)
}
func (m *Obstacle_Position) XXX_Size() int {
	return xxx_messageInfo_Obstacle_Position.Size(m)
}
func (m *Obstacle_Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Obstacle_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Obstacle_Position proto.InternalMessageInfo

func (m *Obstacle_Position) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Obstacle_Position) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Obstacle_Position) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

type Obstacle_Fence struct {
	Radius               uint32   `protobuf:"varint,1,opt,name=radius,proto3" json:"radius,omitempty"`
	Min                  uint32   `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
	Max                  uint32   `protobuf:"varint,3,opt,name=max,proto3" json:"max,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Obstacle_Fence) Reset()         { *m = Obstacle_Fence{} }
func (m *Obstacle_Fence) String() string { return proto.CompactTextString(m) }
func (*Obstacle_Fence) ProtoMessage()    {}
func (*Obstacle_Fence) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{2, 1}
}

func (m *Obstacle_Fence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Obstacle_Fence.Unmarshal(m, b)
}
func (m *Obstacle_Fence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Obstacle_Fence.Marshal(b, m, deterministic)
}
func (m *Obstacle_Fence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Obstacle_Fence.Merge(m, src)
}
func (m *Obstacle_Fence) XXX_Size() int {
	return xxx_messageInfo_Obstacle_Fence.Size(m)
}
func (m *Obstacle_Fence) XXX_DiscardUnknown() {
	xxx_messageInfo_Obstacle_Fence.DiscardUnknown(m)
}

var xxx_messageInfo_Obstacle_Fence proto.InternalMessageInfo

func (m *Obstacle_Fence) GetRadius() uint32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *Obstacle_Fence) GetMin() uint32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *Obstacle_Fence) GetMax() uint32 {
	if m != nil {
		return m.Max
	}
	return 0
}

type CollisionWarning struct {
	// UNIX timestamp in ms
	Timestamp uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Unique ID of tag
	ID uint32 `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	// Distance from object
	Distance             float32  `protobuf:"fixed32,3,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CollisionWarning) Reset()         { *m = CollisionWarning{} }
func (m *CollisionWarning) String() string { return proto.CompactTextString(m) }
func (*CollisionWarning) ProtoMessage()    {}
func (*CollisionWarning) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{3}
}

func (m *CollisionWarning) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollisionWarning.Unmarshal(m, b)
}
func (m *CollisionWarning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollisionWarning.Marshal(b, m, deterministic)
}
func (m *CollisionWarning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollisionWarning.Merge(m, src)
}
func (m *CollisionWarning) XXX_Size() int {
	return xxx_messageInfo_CollisionWarning.Size(m)
}
func (m *CollisionWarning) XXX_DiscardUnknown() {
	xxx_messageInfo_CollisionWarning.DiscardUnknown(m)
}

var xxx_messageInfo_CollisionWarning proto.InternalMessageInfo

func (m *CollisionWarning) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CollisionWarning) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *CollisionWarning) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type CollisionWarnings struct {
	WarningList          []*CollisionWarning `protobuf:"bytes,1,rep,name=warningList,proto3" json:"warningList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CollisionWarnings) Reset()         { *m = CollisionWarnings{} }
func (m *CollisionWarnings) String() string { return proto.CompactTextString(m) }
func (*CollisionWarnings) ProtoMessage()    {}
func (*CollisionWarnings) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9c77e2d00e2b439, []int{4}
}

func (m *CollisionWarnings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CollisionWarnings.Unmarshal(m, b)
}
func (m *CollisionWarnings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CollisionWarnings.Marshal(b, m, deterministic)
}
func (m *CollisionWarnings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollisionWarnings.Merge(m, src)
}
func (m *CollisionWarnings) XXX_Size() int {
	return xxx_messageInfo_CollisionWarnings.Size(m)
}
func (m *CollisionWarnings) XXX_DiscardUnknown() {
	xxx_messageInfo_CollisionWarnings.DiscardUnknown(m)
}

var xxx_messageInfo_CollisionWarnings proto.InternalMessageInfo

func (m *CollisionWarnings) GetWarningList() []*CollisionWarning {
	if m != nil {
		return m.WarningList
	}
	return nil
}

func init() {
	proto.RegisterEnum("vutura.obstacles.Obstacle_Type", Obstacle_Type_name, Obstacle_Type_value)
	proto.RegisterType((*Empty)(nil), "vutura.obstacles.Empty")
	proto.RegisterType((*TagsResponse)(nil), "vutura.obstacles.TagsResponse")
	proto.RegisterType((*Obstacle)(nil), "vutura.obstacles.Obstacle")
	proto.RegisterType((*Obstacle_Position)(nil), "vutura.obstacles.Obstacle.Position")
	proto.RegisterType((*Obstacle_Fence)(nil), "vutura.obstacles.Obstacle.Fence")
	proto.RegisterType((*CollisionWarning)(nil), "vutura.obstacles.CollisionWarning")
	proto.RegisterType((*CollisionWarnings)(nil), "vutura.obstacles.CollisionWarnings")
}

func init() { proto.RegisterFile("obstacles/lora-obstacles.proto", fileDescriptor_a9c77e2d00e2b439) }

var fileDescriptor_a9c77e2d00e2b439 = []byte{
	// 548 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x25, 0x49, 0xb7, 0x65, 0xb7, 0xdb, 0x14, 0x0c, 0x62, 0x55, 0x84, 0x46, 0x95, 0xbd, 0xf4,
	0x85, 0x44, 0xb4, 0x12, 0xe2, 0x05, 0x21, 0xda, 0xa6, 0x5d, 0x18, 0xda, 0x26, 0x37, 0x1d, 0x02,
	0x21, 0x0d, 0xb7, 0x35, 0xc5, 0x52, 0x1a, 0x47, 0xb1, 0x3b, 0xda, 0x3f, 0xe2, 0x8b, 0xf8, 0x1e,
	0x14, 0x37, 0x4d, 0x59, 0xab, 0x16, 0xde, 0x7c, 0x8e, 0xcf, 0x39, 0xf1, 0xbd, 0x37, 0x36, 0x9c,
	0xf1, 0x81, 0x90, 0x64, 0x18, 0x51, 0xe1, 0x45, 0x3c, 0x25, 0x2f, 0x0b, 0xe8, 0x26, 0x29, 0x97,
	0x1c, 0x59, 0xf7, 0x53, 0x39, 0x4d, 0x89, 0x5b, 0xf0, 0xce, 0x01, 0xec, 0xf9, 0x93, 0x44, 0xce,
	0x9d, 0x0b, 0x38, 0x0a, 0xc9, 0x58, 0x60, 0x2a, 0x12, 0x1e, 0x0b, 0x8a, 0xde, 0xc0, 0x61, 0xa1,
	0xaa, 0x68, 0x55, 0xa3, 0x56, 0xae, 0xdb, 0xee, 0xba, 0xdd, 0xbd, 0xce, 0x57, 0x78, 0x25, 0x76,
	0x7e, 0x1b, 0x60, 0x2e, 0x79, 0x74, 0x02, 0x7a, 0xd0, 0xae, 0x68, 0x55, 0xad, 0x76, 0x8c, 0xf5,
	0xa0, 0x8d, 0x1a, 0x50, 0x92, 0xf3, 0x84, 0x56, 0xf4, 0xaa, 0x56, 0x3b, 0xa9, 0xbf, 0xd8, 0x9e,
	0xe8, 0x86, 0xf3, 0x84, 0x62, 0x25, 0x46, 0xef, 0xc0, 0x4c, 0xb8, 0x60, 0x92, 0xf1, 0xb8, 0x62,
	0x54, 0xb5, 0x5a, 0xb9, 0x7e, 0xbe, 0xc3, 0x78, 0x93, 0x4b, 0x71, 0x61, 0x42, 0xaf, 0x61, 0xef,
	0x3b, 0x8d, 0x87, 0xb4, 0x52, 0x52, 0xee, 0xea, 0x0e, 0x77, 0x27, 0xd3, 0xe1, 0x85, 0xdc, 0xfe,
	0x06, 0xe6, 0x32, 0x0d, 0xd9, 0x60, 0x46, 0x44, 0x32, 0x39, 0x1d, 0x51, 0x55, 0x8f, 0x8e, 0x0b,
	0x8c, 0x9e, 0xc3, 0x61, 0xc4, 0xe3, 0xf1, 0x62, 0x53, 0x57, 0x9b, 0x2b, 0x22, 0x73, 0x92, 0x28,
	0x77, 0x1a, 0x0b, 0xe7, 0x12, 0xdb, 0x2d, 0xd8, 0x53, 0x5f, 0x44, 0xcf, 0x60, 0x3f, 0x25, 0x23,
	0x36, 0x15, 0x79, 0xb3, 0x72, 0x84, 0x2c, 0x30, 0x26, 0x2c, 0x56, 0xa1, 0xc7, 0x38, 0x5b, 0x2a,
	0x86, 0xcc, 0x54, 0x52, 0xc6, 0x90, 0x99, 0x43, 0xa1, 0x94, 0x75, 0x0b, 0x9d, 0xc2, 0x93, 0xfe,
	0x55, 0xd0, 0xf6, 0xaf, 0xc2, 0xa0, 0x13, 0xf8, 0xed, 0xbb, 0xeb, 0xe6, 0x07, 0xbf, 0x15, 0x5a,
	0x8f, 0x90, 0x05, 0x47, 0x9d, 0x00, 0xfb, 0x77, 0x9d, 0xa0, 0x7b, 0x11, 0xfa, 0xd8, 0xd2, 0xd0,
	0x09, 0x80, 0x62, 0x42, 0xdc, 0x6f, 0x5d, 0x5a, 0x3a, 0x3a, 0x02, 0x53, 0xe1, 0xfe, 0xfb, 0x5b,
	0xcb, 0x40, 0x4f, 0xc1, 0x7a, 0x10, 0x94, 0xb1, 0x25, 0xe7, 0x2b, 0x58, 0x2d, 0x1e, 0x45, 0x4c,
	0x30, 0x1e, 0x7f, 0x22, 0x69, 0xcc, 0xe2, 0x71, 0x56, 0xb9, 0x64, 0x13, 0x2a, 0x24, 0x99, 0x24,
	0xea, 0xe4, 0x25, 0xbc, 0x22, 0xf2, 0xe9, 0xeb, 0xc5, 0xf4, 0x6d, 0x30, 0x47, 0x4c, 0x48, 0x92,
	0x8d, 0x22, 0xef, 0xc4, 0x12, 0x3b, 0x9f, 0xe1, 0xf1, 0x7a, 0xba, 0x40, 0x6d, 0x28, 0xff, 0x5c,
	0xac, 0x3f, 0x32, 0x21, 0xf3, 0xff, 0xd0, 0xd9, 0x1c, 0xdf, 0xba, 0x13, 0xff, 0x6d, 0xab, 0xff,
	0xd2, 0xa1, 0x9c, 0xfd, 0xdc, 0x3d, 0x9a, 0xde, 0xb3, 0x21, 0x45, 0x4d, 0x38, 0xe8, 0x52, 0x99,
	0x31, 0xe8, 0x74, 0x33, 0x4b, 0xdd, 0x07, 0xfb, 0x6c, 0x73, 0xe3, 0xc1, 0xfd, 0x78, 0x0b, 0xfb,
	0x3d, 0x95, 0x81, 0x76, 0x5c, 0x0b, 0x7b, 0x5b, 0x3c, 0xba, 0x84, 0x72, 0x97, 0xca, 0xa2, 0xce,
	0xad, 0xc7, 0x38, 0xff, 0x77, 0xad, 0x02, 0x05, 0x00, 0xbd, 0x22, 0x0c, 0xfd, 0x47, 0x7b, 0xb6,
	0x9e, 0xab, 0xd9, 0xf8, 0xf2, 0x6a, 0xcc, 0xe4, 0x8f, 0xe9, 0xc0, 0x1d, 0xf2, 0x89, 0x37, 0x1b,
	0xf0, 0x34, 0xa5, 0xde, 0xad, 0xd2, 0xde, 0x64, 0x4f, 0x88, 0x37, 0xe6, 0xde, 0xc2, 0xea, 0x15,
	0xd6, 0xc1, 0xbe, 0x7a, 0x5d, 0x1a, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1a, 0xc3, 0xfb, 0x15,
	0x7f, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TagsServiceClient is the client API for TagsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TagsServiceClient interface {
	GetTags(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TagsResponse, error)
	SetTag(ctx context.Context, in *Obstacle, opts ...grpc.CallOption) (*Empty, error)
	GetWarnings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CollisionWarnings, error)
	SetWarning(ctx context.Context, in *CollisionWarning, opts ...grpc.CallOption) (*Empty, error)
}

type tagsServiceClient struct {
	cc *grpc.ClientConn
}

func NewTagsServiceClient(cc *grpc.ClientConn) TagsServiceClient {
	return &tagsServiceClient{cc}
}

func (c *tagsServiceClient) GetTags(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TagsResponse, error) {
	out := new(TagsResponse)
	err := c.cc.Invoke(ctx, "/vutura.obstacles.TagsService/GetTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagsServiceClient) SetTag(ctx context.Context, in *Obstacle, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/vutura.obstacles.TagsService/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagsServiceClient) GetWarnings(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*CollisionWarnings, error) {
	out := new(CollisionWarnings)
	err := c.cc.Invoke(ctx, "/vutura.obstacles.TagsService/GetWarnings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tagsServiceClient) SetWarning(ctx context.Context, in *CollisionWarning, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/vutura.obstacles.TagsService/SetWarning", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TagsServiceServer is the server API for TagsService service.
type TagsServiceServer interface {
	GetTags(context.Context, *Empty) (*TagsResponse, error)
	SetTag(context.Context, *Obstacle) (*Empty, error)
	GetWarnings(context.Context, *Empty) (*CollisionWarnings, error)
	SetWarning(context.Context, *CollisionWarning) (*Empty, error)
}

// UnimplementedTagsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTagsServiceServer struct {
}

func (*UnimplementedTagsServiceServer) GetTags(ctx context.Context, req *Empty) (*TagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTags not implemented")
}
func (*UnimplementedTagsServiceServer) SetTag(ctx context.Context, req *Obstacle) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedTagsServiceServer) GetWarnings(ctx context.Context, req *Empty) (*CollisionWarnings, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWarnings not implemented")
}
func (*UnimplementedTagsServiceServer) SetWarning(ctx context.Context, req *CollisionWarning) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetWarning not implemented")
}

func RegisterTagsServiceServer(s *grpc.Server, srv TagsServiceServer) {
	s.RegisterService(&_TagsService_serviceDesc, srv)
}

func _TagsService_GetTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagsServiceServer).GetTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vutura.obstacles.TagsService/GetTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagsServiceServer).GetTags(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagsService_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Obstacle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagsServiceServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vutura.obstacles.TagsService/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagsServiceServer).SetTag(ctx, req.(*Obstacle))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagsService_GetWarnings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagsServiceServer).GetWarnings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vutura.obstacles.TagsService/GetWarnings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagsServiceServer).GetWarnings(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _TagsService_SetWarning_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollisionWarning)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TagsServiceServer).SetWarning(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/vutura.obstacles.TagsService/SetWarning",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TagsServiceServer).SetWarning(ctx, req.(*CollisionWarning))
	}
	return interceptor(ctx, in, info, handler)
}

var _TagsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "vutura.obstacles.TagsService",
	HandlerType: (*TagsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTags",
			Handler:    _TagsService_GetTags_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _TagsService_SetTag_Handler,
		},
		{
			MethodName: "GetWarnings",
			Handler:    _TagsService_GetWarnings_Handler,
		},
		{
			MethodName: "SetWarning",
			Handler:    _TagsService_SetWarning_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "obstacles/lora-obstacles.proto",
}
